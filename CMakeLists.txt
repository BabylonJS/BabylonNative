# cmake 3.15.3+ because of a c++ regression when swift is enable
cmake_minimum_required(VERSION 3.15.3)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

function(target_link_to_dependencies)
    set(target ${ARGV0})
    math(EXPR lastIdx ${ARGC}-1)
    set(scope PUBLIC)
    foreach(idx RANGE 1 ${lastIdx})
        set(arg "${ARGV${idx}}")
        if(arg STREQUAL "PUBLIC")
            set(scope PUBLIC)
        elseif(arg STREQUAL "PRIVATE")
            set(scope PRIVATE)
        elseif(arg STREQUAL "INTERFACE")
            set(scope INTERFACE)
        else()
            function(on_before_link target)
            endfunction()

            function(on_after_link target)
            endfunction()

            get_target_property(type ${arg} TYPE)
            if(NOT type STREQUAL "INTERFACE_LIBRARY")
                get_target_property(cmakeFile ${arg} ON_LINKED_AS_DEPENDENCY_CMAKE_FILE)
                if(NOT cmakeFile STREQUAL "cmakeFile-NOTFOUND")
                    message(STATUS "Got ON_LINKED_AS_DEPENDENCY_CMAKE_FILE from ${arg}: ${cmakeFile}!")
                    include(${cmakeFile} REQUIRED)
                endif()
            endif()

            on_before_link(${target})
            target_link_libraries(${target} ${scope} ${arg})
            on_after_link(${target})
        endif()
    endforeach()
endfunction()

project(BabylonNative)

if (APPLE)
    # without this option on azure pipelines, there is a mismatch with math.h giving a lot of undefined functions on macOS.
    # only enabled for Apple as there is no issue for UWP/WIN32
    set(CMAKE_NO_SYSTEM_FROM_IMPORTED TRUE)
endif()

if(ANDROID)
    set(BABYLON_NATIVE_PLATFORM "Android")
elseif(APPLE)
    set(BABYLON_NATIVE_PLATFORM "Apple")
elseif(WINDOWS_STORE)
    set(BABYLON_NATIVE_PLATFORM "UWP")
elseif(WIN32)
    set(BABYLON_NATIVE_PLATFORM "Win32")
else()
    message(FATAL_ERROR "Unrecognized platform: ${CMAKE_SYSTEM_NAME}")
endif()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_subdirectory(Dependencies)
add_subdirectory(Core)
add_subdirectory(Plugins)
add_subdirectory(Apps)
