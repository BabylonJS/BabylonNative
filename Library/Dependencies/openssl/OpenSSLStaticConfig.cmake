# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget OpenSSL::SSL OpenSSL::Crypto)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)

# Create imported target OpenSSL::SSL
add_library(OpenSSL::SSL STATIC IMPORTED)

set_target_properties(OpenSSL::SSL PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/providers/implementations/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/providers/common/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto/ec/curve448/arch_32;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto/ec/curve448;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto"
)

# Create imported target OpenSSL::Crypto
add_library(OpenSSL::Crypto STATIC IMPORTED)

set_target_properties(OpenSSL::Crypto PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/providers/implementations/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/providers/common/include;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto/ec/curve448/arch_32;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto/ec/curve448;${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/openssl/openssl/crypto"
)

# Import target "OpenSSL::SSL" for configuration "Debug"
set_property(TARGET OpenSSL::SSL APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(OpenSSL::SSL PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "${CMAKE_CURRENT_SOURCE_DIR}/../build/Android_${ANDROID_ABI}/Dependencies/openssl/libSSL.a"
  )

# Import target "OpenSSL::Crypto" for configuration "Debug"
set_property(TARGET OpenSSL::Crypto APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(OpenSSL::Crypto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "${CMAKE_CURRENT_SOURCE_DIR}/../build/Android_${ANDROID_ABI}/Dependencies/openssl/libCrypto.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
