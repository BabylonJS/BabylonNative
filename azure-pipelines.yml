trigger:
- master

pr:
- master

jobs:
- job: win32_x64
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-latest'

  steps:
  - script: |
      git submodule update --init --recursive
    displayName: 'Checkout dependencies'

  - script: |
      mkdir buildWin32_x64
      cd buildWin32_x64
      cmake -G "Visual Studio 16 2019" -A x64 ..
    displayName: 'Generate Win32_x64 solution'

  - task: MSBuild@1
    inputs:
      solution: 'buildWin32_x64/BabylonNative.sln'
      maximumCpuCount: true
      configuration: 'RelWithDebInfo'
    displayName: 'Build WIN32_x64'

  - script: |
      reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\ValidationTests.exe"
      reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\ValidationTests.exe" /v DumpType /t REG_DWORD /d 2
      reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\ValidationTests.exe" /v DumpCount /t REG_DWORD /d 1
      reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\ValidationTests.exe" /v DumpFolder /t REG_SZ /d "$(Build.ArtifactStagingDirectory)/Dumps"
    displayName: 'Enable Crash Dumps'

  - script: |
      cd buildWin32_x64\Apps\ValidationTests
      mkdir Results
      mkdir Errors
      cd RelWithDebInfo
      ValidationTests
    displayName: 'Validation Tests'

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Win32_x64 Rendered Pictures'
      pathtoPublish: 'buildWin32_x64/Apps/ValidationTests/Results'
    displayName: 'Publish Tests Win32_x64 Results'
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Win32_x64 Error Pictures'
      pathtoPublish: 'buildWin32_x64/Apps/ValidationTests/Errors'
    displayName: 'Publish Tests Win32_x64 Errors'
    condition: failed()

  - task: CopyFiles@2
    inputs:
      sourceFolder: 'buildWin32_x64/Apps/ValidationTests/RelWithDebInfo'
      contents: ValidationTests.*
      targetFolder: '$(Build.ArtifactStagingDirectory)/Dumps'
      cleanTargetFolder: false
    displayName: 'Stage test app exe/pdb for publishing'
    condition: failed()

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Win32_x64 Crash Dumps'
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/Dumps'
    displayName: 'Publish Tests Win32_x64 Dumps'
    condition: failed()

- job: Ubuntu_GCC9_JSC
  timeoutInMinutes: 30
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    CC: gcc-9
    CXX: g++-9

  steps:
  - script: |
      git submodule update --init --recursive
    displayName: 'Checkout dependencies'
  - script: |
      sudo apt-get update
      sudo apt-get install libjavascriptcoregtk-4.0-dev libgl1-mesa-dev libcurl4-openssl-dev gcc-9 libc++-9-dev libc++abi-9-dev lld-9 ninja-build
    displayName: 'Install packages'
  - script: |
      mkdir build
      cd build
      cmake .. -GNinja -DJSCORE_LIBRARY=/usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so -DCMAKE_BUILD_TYPE=RelWithDebInfo
      ninja
    displayName: 'Build X11'
  - script: |
      export DISPLAY=:99
      Xvfb :99 -screen 0 1600x900x24 &
      sleep 3
      cd build/Apps/ValidationTests
      mkdir Errors
      mkdir Results
      ./ValidationTests
    displayName: 'Test on CI'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Ubuntu_GCC9_JSC Rendered Pictures'
      pathtoPublish: 'build/Apps/ValidationTests/Results'
    displayName: 'Publish Tests Ubuntu_GCC9_JSC Results'
    condition: succeeded()
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Ubuntu_GCC9_JSC Error Pictures'
      pathtoPublish: 'build/Apps/ValidationTests/Errors'
    displayName: 'Publish Tests Ubuntu_GCC9_JSC Errors'
    condition: failed()
