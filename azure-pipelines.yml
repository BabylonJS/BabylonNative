trigger:
- master

pr:
- master

jobs:
- job: win32_x64   
  timeoutInMinutes: 12
  pool:
    vmImage: 'windows-latest'

  steps:
  - script: |
      git submodule update --init --recursive
    displayName: 'Checkout dependencies'
  - script: |
      mkdir buildWin32_x64
      cd buildWin32_x64
      cmake -G "Visual Studio 16 2019" -A x64 ..
    displayName: 'Generate Win32_x64 solution'
    
  - task: MSBuild@1
    inputs:
      solution: 'buildWin32_x64/BabylonNative.sln'
      maximumCpuCount: true
      configuration: 'Debug'
    displayName: 'Build WIN32_x64'
  - script: |
      cd buildWin32_x64\Apps\ValidationTests
      mkdir Results
      mkdir Errors
      cd Debug
      ValidationTests -NoWindow
    displayName: 'Test on CI'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Win32_x64 Rendered Pictures'
      pathtoPublish: 'buildWin32_x64/Apps/ValidationTests/Results'
    displayName: 'Publish Tests Win32_x64 Results'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Win32_x64 Rendered Pictures with errors'
      pathtoPublish: 'buildWin32_x64/Apps/ValidationTests/Errors'
    displayName: 'Publish Error Win32_x64 Results'

- job: Ubuntu
  timeoutInMinutes: 5
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    CC: clang-8
    CXX: clang++-8

  steps:
  - script: |
      git submodule update --init --recursive
    displayName: 'Checkout dependencies'
  - script: |
      sudo apt-get update
      sudo apt-get install libjavascriptcoregtk-4.0-dev libgl1-mesa-dev libcurl4-openssl-dev clang-8 libc++-8-dev libc++abi-8-dev lld-8 ninja-build
    displayName: 'Install packages'
  - script: |
      mkdir build
      cd build
      cmake .. -GNinja -DJSCORE_LIBRARY=/usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so
      ninja
    displayName: 'Build X11'
  - script: |
      export DISPLAY=:99
      Xvfb :99 -screen 0 1600x900x24 &
      sleep 3
      cd build/Apps/ValidationTests
      mkdir Errors
      mkdir Results
      ./ValidationTests
    displayName: 'Test on CI'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Ubuntu Rendered Pictures'
      pathtoPublish: 'build/Apps/ValidationTests/Results'
    displayName: 'Publish Tests Ubuntu Results'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'Ubuntu Rendered Pictures with errors'
      pathtoPublish: 'build/Apps/ValidationTests/Errors'
    displayName: 'Publish Error Ubuntu Results'
