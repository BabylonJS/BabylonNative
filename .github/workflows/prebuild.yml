name: prebuild

on:
  push:
    branches:
      - 'master'

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        platform: [win32, x64, ARM64]
        config: [Debug, Release, RelWithDebInfo]
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          submodules: 'recursive'
      - name: Make Solution
        run: cmake -B build -A ${{ matrix.platform }} -D BGFX_CONFIG_DEBUG=ON -D BABYLON_NATIVE_BUILD_APPS=false -D CMAKE_UNITY_BUILD=true . 
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1
      - name: Build
        run: msbuild build/BabylonNative.sln -p:Configuration="${{ matrix.config }}" -p:Platform=${{ matrix.platform }} 
      - name: Install
        run: cmake --build build --target INSTALL --config ${{ matrix.config }}
      - name: Upload Install Folder
        uses: actions/upload-artifact@v3
        with:
          name: 'Assembled-${{ matrix.config }}${{ matrix.platform }}'
          path: build/install

  build-scripts:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Upload Package scripts
        uses: actions/upload-artifact@v3
        with:
          name: 'Assembled-Scripts'
          path: |
            Install/FindPackage/FindBabylonNative.cmake
            Install/FindPackage/CMakeLists.txt

  package:
    needs: [build-windows, build-scripts]
    runs-on: windows-2019
    steps:
      - name: Download Debug x86 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-Debugwin32'
          path: Package/Windows/Debug/x86
      - name: Download Debug x64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-Debugx64'
          path: Package/Windows/Debug/x64
      - name: Download Debug ARM64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-DebugARM64'
          path: Package/Windows/Debug/ARM64
      - name: Download Release x86 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-Releasewin32'
          path: Package/Windows/Release/x86
      - name: Download Release x64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-Releasex64'
          path: Package/Windows/Release/x64
      - name: Download Release ARM64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-ReleaseARM64'
          path: Package/Windows/Release/ARM64
      - name: Download RelWithDebInfo x86 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-RelWithDebInfowin32'
          path: Package/Windows/RelWithDebInfo/x86
      - name: Download RelWithDebInfo x64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-RelWithDebInfox64'
          path: Package/Windows/RelWithDebInfo/x64
      - name: Download RelWithDebInfo ARM64 
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-RelWithDebInfoARM64'
          path: Package/Windows/RelWithDebInfo/Arm64
      - name: Download Scripts
        uses: actions/download-artifact@v3
        with:
          name: 'Assembled-Scripts'
          path: Package

      - name: Compress Package
        uses: a7ul/tar-action@v1.1.3
        id: compress
        with:
          command: c
          cwd: ./
          files: Package
          outPath: ReleasePackage.tar.gz

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ReleasePackage.tar.gz
          tag_name: V${{ env.SHA }}
          name: V${{ env.SHA }}
          body: "Release for ${{ env.SHA }}"
          draft: false
          prerelease: false
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}

  test-release:
    needs: [package]
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1
      - name: Build Solution
        run: |
          cd Install/TestPackage
          cmake . -B build -D BABYLON_NATIVE_TAG=${{ env.SHA }}
          cmake --build build --config RelWithDebInfo
