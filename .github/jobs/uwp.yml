parameters:
- name: name
  type: string
- name: vmImage
  type: string
- name: platform
  type: string
- name: napiType
  type: string
  default: direct
  values:
  - direct
  - jsi

jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 30
    pool:
      vmImage: ${{ parameters.vmImage }}
    variables:
      ${{ if eq(parameters.napiType, 'jsi') }}:
        napiSuffix: '_JSI'
        jsEngineDefine: '-DNAPI_JAVASCRIPT_ENGINE=JSI'
      ${{ if ne(parameters.napiType, 'jsi') }}:
        napiSuffix: ''
        jsEngineDefine: ''
      solutionName: 'UWP_${{ parameters.platform }}${{variables.napiSuffix}}'

    steps:
    - template: cmake.yml
      parameters:
        vmImage: ${{ parameters.vmImage }}

    - script: |
        cmake -B build${{ variables.solutionName }} -D CMAKE_SYSTEM_NAME=WindowsStore -D CMAKE_SYSTEM_VERSION=10.0 ${{ variables.jsEngineDefine }} -A ${{ parameters.platform }} -D CMAKE_UNITY_BUILD=$(UNITY_BUILD)  -D BABYLON_DEBUG_TRACE=ON
      displayName: 'Generate ${{ variables.solutionName }} solution'
  
    - task: VSBuild@1
      inputs:
        solution: 'build${{ variables.solutionName }}/BabylonNative.sln'
        maximumCpuCount: true
        configuration: 'RelWithDebInfo'
        msbuildArgs: '/p:AppxPackageSigningEnabled=false'
      displayName: 'Build ${{ variables.solutionName }}'
