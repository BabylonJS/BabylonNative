parameters:
  name: ''
  vmImage: ''
  CC: ''
  CXX: ''
  JSEngine: ''
  Sanitizers: false

jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 30
    pool:
      vmImage: ${{ parameters.vmImage }}

    variables:
      SANITIZER_FLAG: ${{ parameters.Sanitizers && 'ON' || 'OFF' }}
      CC: ${{ parameters.CC }}
      CXX: ${{ parameters.CXX }}
  
    steps:
    - template: cmake.yml
      parameters:
        vmImage: ${{ parameters.vmImage }}

    - script: |
        sudo apt-get update
        sudo apt-get install libjavascriptcoregtk-4.1-dev libgl1-mesa-dev libcurl4-openssl-dev libwayland-dev
      displayName: 'Install packages'

    - script: |
        cmake -G Ninja -B build -D JAVASCRIPTCORE_LIBRARY=/usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.1.so -D NAPI_JAVASCRIPT_ENGINE=${{ parameters.JSEngine }} -D CMAKE_BUILD_TYPE=RelWithDebInfo -D BX_CONFIG_DEBUG=ON -D CMAKE_UNITY_BUILD=$(UNITY_BUILD) -D OpenGL_GL_PREFERENCE=GLVND -D BABYLON_DEBUG_TRACE=ON -D ENABLE_SANITIZERS=$(SANITIZER_FLAG) .
        ninja -C build
      displayName: 'Build X11'
    
    - script: |
        cd build/Apps/Playground
        xvfb-run ./Playground app:///Scripts/validation_native.js
      displayName: 'Validation Tests'

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: '${{ parameters.name }} Rendered Pictures'
        pathtoPublish: 'build/Apps/Playground/Results'
      displayName: 'Publish Tests ${{ parameters.name }} Results'
      condition: always()
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: '${{ parameters.name }} Error Pictures'
        pathtoPublish: 'build/Apps/Playground/Errors'
      displayName: 'Publish Tests ${{ parameters.name }} Errors'
      condition: failed()

    - script: |
        cd build/Apps/UnitTests
        xvfb-run ./UnitTests
      displayName: 'Unit Tests'