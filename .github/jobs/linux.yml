parameters:
  name: ''
  vmImage: ''
  CC: ''
  CXX: ''
  JSEngine: ''
  
jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 30
    pool:
      vmImage: ${{ parameters.vmImage }}
  
    variables:
      CC: ${{ parameters.CC }}
      CXX: ${{ parameters.CXX }}
  
    steps:
    - script: |
        git submodule update --init --recursive
      displayName: 'Checkout dependencies'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'Apps'
      displayName: 'Install Babylon.js NPM packages'

    - template: cmake.yml
      parameters:
        vmImage: ${{ parameters.vmImage }}

    - script: |
        sudo apt-get update
        sudo apt-get install libjavascriptcoregtk-4.0-dev libgl1-mesa-dev libcurl4-openssl-dev ${{ parameters.CC }} libc++-9-dev libc++abi-9-dev libnode-dev
      displayName: 'Install packages'

    - script: |
        mkdir build
        cd build
        cmake .. -GNinja -DJSCORE_LIBRARY=/usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so -DNAPI_JAVASCRIPT_ENGINE=${{ parameters.JSEngine }} -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBGFX_CONFIG_MEMORY_TRACKING=ON -DBGFX_CONFIG_DEBUG=ON
        ninja
      displayName: 'Build X11'
    
#    - script: |
#        export DISPLAY=:99
#        Xvfb :99 -screen 0 1600x900x24 &
#        sleep 3
#        cd build/Apps/ValidationTests
#        ./ValidationTests
#      # Only test with V8 for now as ValidationTests with JSC are pretty unstable
#      condition: contains('${{ parameters.JSEngine }}', 'V8')
#      displayName: 'Validation Tests'

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: '${{ parameters.name }} Rendered Pictures'
        pathtoPublish: 'build/Apps/ValidationTests/Results'
      displayName: 'Publish Tests ${{ parameters.name }} Results'
      condition: always()
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: '${{ parameters.name }} Error Pictures'
        pathtoPublish: 'build/Apps/ValidationTests/Errors'
      displayName: 'Publish Tests ${{ parameters.name }} Errors'
      condition: failed()

    - script: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1600x900x24 &
        while [ ! -e /tmp/.X11-unix/X99 ]; do sleep 0.1; done
        cd build/Apps/UnitTests
        ./UnitTests
      displayName: 'Unit Tests'