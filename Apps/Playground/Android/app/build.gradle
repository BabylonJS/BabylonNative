apply plugin: 'com.android.application'

def platformVersion = 21
def arcore_libpath = "${buildDir}/arcore-native"

configurations { natives }

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId 'com.android.testapp'
        minSdkVersion "${platformVersion}"
        targetSdkVersion 28
        externalNativeBuild {
            cmake {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                arguments '-DANDROID_STL=c++_static',
                        '-DHTTP_ONLY=OFF',
                        '-DCMAKE_USE_OPENSSL=ON',
                        '-DBUILD_CURL_EXE=OFF',
                        '-DBUILD_CURL_TESTS=OFF',
                        '-DCURL_STATICLIB=ON',
                        '-DUSE_UNIX_SOCKETS=0',
                        '-DHAVE_FSETXATTR=0',
                        '-DHAVE_LIBSOCKET=0',
                        '-DCURL_DISABLE_FTP=OFF',
                        '-DCURL_DISABLE_LDAP=ON',
                        '-DCURL_DISABLE_TELNET=ON',
                        '-DCURL_DISABLE_DICT=ON',
                        '-DCURL_DISABLE_TFTP=ON',
                        '-DCURL_DISABLE_IMAP=ON',
                        '-DCURL_DISABLE_POP3=ON',
                        '-DCURL_DISABLE_SMTP=ON',
                        '-DENABLE_GLSLANG_BINARIES=OFF',
                        '-DSPIRV_CROSS_CLI=OFF',
                        '-DHAVE_LIBIDN2=OFF',
                        "-DARCORE_LIBPATH=${arcore_libpath}/jni"
            }
        }
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            version '3.13.2+'
            path 'CMakeLists.txt'
        }
    }

    ndkVersion "21.0.6113669"
}

dependencies {
    // ARCore library
    implementation 'com.google.ar:core:1.14.0'
    natives 'com.google.ar:core:1.14.0'

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
}

// Extracts the shared libraries from aars in the natives configuration.
// This is done so that NDK builds can access these libraries.
task extractNativeLibraries() {
    // Always extract, this insures the native libs are updated if the version changes.
    outputs.upToDateWhen { false }
    doFirst {
        configurations.natives.files.each { f ->
            copy {
                from zipTree(f)
                into arcore_libpath
                include "jni/**/*"
            }
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("external") && !task.name.contains("Clean")) {
        task.dependsOn(extractNativeLibraries)
    }
}

task copyFiles {
    copy
    {
        from '../../../BabylonScripts'
        include "*.js"
        into 'src/main/assets/Scripts'
    }
    copy
    {
        from '../../Scripts'
        include "*.js"
        into 'src/main/assets/Scripts'
    }
}

preBuild.dependsOn(copyFiles)